<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 
		spring schdeuler
			매일, 매분, 매초, 매주, 매달 반복적으로 실행시켜야 하는 프로세스가 있는 경우
			스프링 스케쥴러를 사용하면 간편하게 세팅 가능
	 -->
	<!-- 
		스프링 스케쥴러 작업 순서
		1. 세팅 : Namespaces : xmlns:task, context스키마 등록 + 스키마로케이션까지 등록
		2. annotation 활성화 -> task
		3. 스케쥴러로 사용할 클래스를 빈객체로 등록
		4. web.xml에서 프로그램 구동시 spring-sceduler를 추가시킨다
		5. 스케쥴링을 원하는 메소드에 가서 schedule 어노테이션 추가하기
		6. 원하는 실행방식을 결정하여 스케쥴링하기(고정방식, crontab방식이 있음)(crontab이 더 많이 사용됨)
	 -->
<!-- 	<context:component-scan base-package="com.team.codeR"></context:component-scan>
	<task:annotation-driven scheduler="memberScheduler"/>
	<task:scheduler id="memberScheduler" pool-size="100"/>
	<task:scheduled-tasks scheduler="memberScheduler">
		매일 0시 14일 지난 탈퇴 유저 확인  
		<task:scheduled ref="memberController" method="deleteMembers" cron="0 0 0 * * * *"/>
	</task:scheduled-tasks>	   -->

</beans>













